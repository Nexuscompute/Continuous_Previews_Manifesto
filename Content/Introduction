Introduction

Over the past two decades since the Agile Manifesto was published, the concepts and technologies that support Continuous Integration, Continuous Delivery, Cloud Native development, Containerization, Microservices, and Container Orchestration have greatly improved the Agility with which software can be built and delivered. These concepts and technologies have ushered in the now ubiquitous concept of DevOps and have helped break down the silos within the multi-disciplinary teams that must continuously collaborate to build great software.  

Despite these advances, major shifts towards remote work and microservices architectures have in many cases made collaboration more challenging.  While many or even most team members can and do work from home, teams no longer have the cohesion facilitated by the office or the ability to simply walk over to someone elseâ€™s workstation and see the results of their in-progress development.  And while microservices help us break down an application into small functional components that can be developed independently - we must now coordinate complex deployments and operations that successfully integrate the functionality of all these components for testing and delivery. As Development and Agile community stakeholders and contributors, we are cognizant of these shifts and are coming together to define and promote Continuous Previews (CP) as an Agile Software Development best practice.Agile Software teams benefit from CP by bringing QA into the development process, tightening their feedback loops, and simplifying their testing process.  These improvements create greater Team Agility, promote a collaborative culture, and ultimately accelerate software release cycles.
